int i;
int start()
{
 for(int n=0; n<100; n++)
 	{
	//  Формирует строку из переданных параметров и возвращает её. Параметры могут иметь любой тип. Количество параметров не может превышать 64.  
	string SC1=StringConcatenate(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64);
	
	//  Поиск подстроки. Возвращает номер позиции в строке, с которой начинается искомая подстрока, либо -1, если подстрока не найдена.  
	string text="Быстрая коричневая собака перепрыгивает ленивую лисицу";
	int SF1=StringFind(text,"собака перепрыгивает",0);
	
	//Возвращает значение символа, расположенного в указанной позиции строки.
	int SGC=StringGetChar("Test3",3);
	
	//Возвращает число символов в строке.
	int SL=StringLen("123456789");
	
	//Возвращает копию строки с измененным значением символа в указанной позиции.
	string SSC1=StringSetChar("В этом предлИжении нет ошибок",12,'о');
	
	//Извлекает подстроку из текстовой строки, начинающейся c указанной позиции.
	string SS=StringSubstr("Быстрая коричневая собака перепрыгивает ленивую лисицу",8,10);
	
	//Функция урезает символы перевода каретки, пробелы и символы табуляции в левой части строки.
	string S1="   Test1   ";
	string STL1=StringTrimLeft(S1);
	
	//Функция урезает символы перевода каретки, пробелы и символы табуляции в правой части строки
	string S2="   Test2   ";
	string STL2=StringTrimRight(S2);
	}
  return(0);
}

