<metadata>
f4c8caf5aad28ee318740727493fafca3042a0d30c65c3ac92fcbb861634f0c1022c92a29bb9d8f8abce48262b48cfa0c2a6e78e5836dfb891ac577589fc4a3e14725a7783bbfad8f9c6231d4e728ee391feb7d30277d7bbc1a4edcd3c4a3356f1830d7e157caac5e8862e1399bb90a182ac01311e3cdbe5ccf0e8867f1ea6cbb3d61927713ae584a0c9285a93fa2e0e7d2fb0d594f89bfad9ade58c8cfabdd8634397de5a34492d9df84f378ab6715ed5bb7819412cf194dee0b08c85f10e77c5b5ceabdae4357cfc92a1c5e58c4a29e283196dfa95c2b0251990bf87f35920463607629fa12e123d518eefbcd2f89f1a6fbbdaafc8caaf102e28657c2deea2d6e2bd816a456e02c6a7137d2146097c33526c0bcca9b48a9ca0670630458efa4d25640b2c5e437dd5e9f0df4726b1c4a3d72d45620dc4b6c2fce7db99fa721d523f82f2adccf997037acef0447898b77f1c4b24d3be36462445294784fd5668a995afcce6894f226a07caafd9b77703295a417f622900611970fc8e167f56764210e98c274bccad4c38c5acf6805134b191eca50e60a0c44520a6de437fbf902546cca34d205d303451b9d76115fc8f043af5c95f3c95fab6c66f163547e48dc3a420484236cbb8c5fb6c501f3084e7234c2555e9901361274e95f289e10f7b7300a698271bafcb0c6d3b4f412478371076f9ba00720b6e1170f185056c147b305eecd21120e1d786a8f4c5a694dbf541730838d2e2c3fa7b479cb32541274692e6a5c0b6f9482eb9fa087a7a1f3554572394fd2e412e40e2dcfcc01277bdc598e8501463020e7ab7d2340ae2d208392d03152569581b355b6b1828dfeff0c14478032ce386d6aefa8a7a3e1e7f97e3d6b3f4ca8fb3d9a9e28320536b18c6b1d0bf6f1d76120c328db1e9c60373bddc9eedb3c05d2abad550228de9d9e7c5f9620d0b7eb3c7c0b04f3ab3c7053bf2a9b6934d1d94c6470812557a28f5b4e2af290cf8a52975074e7816d9bd7910d2b1d6b7dda9afc0bac86013f5a9fdc1e7c88ee1cdb8ef9b7505fe8b13674977caf685e01f67fc9dfd93b2fe0a6be886a3c4320c2a7abac8147b2074eb9982e32b4f0b6e6715bbf7f19069071671e39688e93c5b99fc1925b49bee8bd7af4223cda3622e1c7d036dcaad211f407cc3b1294c44229ffacebcfd988ee0254631543b48ead4704ce7951075096f80e59def0b6ebed0d0b35d383c021e45cfea69390e5c195662251e4cb4f5612c1336722fadf13262cbaa0d6e600bd5b49afd6d086615f4a8b1dcb7c6533f2d1982ac44342447e18cc1fdf3dc196b2144c9af62074537a4c10e602241debbc6f8615d331cec9e791cc5a37613b6c412778ae4dab9b4d1d9aa1c22655901684d239cf82b42cba891f0700407685f2d1758b2c2d8acdbb2cca359373b487454c8bb294c6b1b2b4ab2c0492856221174a4994c6e9bcfd5a731446f0ae2c01f216a56f19d7a13a9c7781db898a4ca92f39ef388ed78457a58b9f509604e202540bb9b546534167d5d6506610ecba795faa4d6f1cc2c0eac8102348abfdde87d4e3402a98b7b5b76055723f9805a364623bc8104266555f3d1c1e1bec9177e5d39394de68e310cfcdec2f340623a1a34478cf57a1792f03f50e58975489dbf01333504c1f677554a6a7204721b6e1d731a4c2e9df1bedbe3de9ab880d46a18780d2b4ef6d40d3398a49cb3660a3059f19f15702a14320e240be68f8be5fc98513805664021b8cc85ea01735b144535463218719ef1c1af7201b886063afd8e44218cfe8ae36401c7b42b155d1b1e7f95f9ef9cd0b5c4f8c0ef7e0d7411f88a21483c59d1a24678aa967507492ced996e3ae79e71015633fec01d5937586c195436e9858eeb300c84ab91e387e257231f4bd9a0a2d22b4e82bc261a28454425186024660667d4a691e282c097f6791abad1744af6c629153b148be6dcbde79f0143fd9cb0c21a6962206504bdde08634b75437f482d9bf55233bfddb7db7a1f1859b6dab4d1285a85f1c3b00b353274ec8dbdd14a390461211de3cc6b0e0d6380e15032660a45201657b6da6005295bf38770030f315f63f6936f0184e591f3016dc3a6f8bb553861151163d4adac9221672f4eb7db3e4dafca417d6946c2a71e70a8c971136d01b7d2f8bbaac70a7ea7d50f76efd1d2ee1a7fbed0bedfee8c86ea2045bbf21b756511a7d52f4e1f7de584057786b84f099cfddab6e3906c0980bca78897f2a6c88dec86e44c20d4b197de523c1662ef9df190dfbd7213e795536d734f4d62e984e58aabcfe396f69a1e7baa94c0e332f869b83e05f25c45746ed8bebe
</metadata>
//---------------------------------------------------
// Project: KRI
// Language: MQL4
// Type: Indicator
// Author: 
// Company: 
// Copyright: 
// Created: 16.12.2009
//---------------------------------------------------
#property indicator_separate_window
#property indicator_buffers 1
#property indicator_color1 Red

extern int KRIPeriod = 13;

double KRIBuffer[];

int init() {
   string short_name;
   SetIndexStyle(0, DRAW_LINE);
   SetIndexBuffer(0, KRIBuffer);
   short_name = "KRI ("+KRIPeriod+")";
   IndicatorShortName(short_name);
   SetIndexLabel(0, short_name);
//----
   SetIndexDrawBegin(0, KRIPeriod);
//----
   return(0);
}

int start() {
   int i, counted_bars=IndicatorCounted();
//----
   if (Bars <= KRIPeriod) return(0);
//---- initial zero
   if (counted_bars < 1)
      for (i = 1; i <= KRIPeriod; i++) KRIBuffer[Bars-i] = 0.0;
//----
   i = Bars-KRIPeriod-1;
   if (counted_bars >= KRIPeriod) i = Bars-counted_bars-1;
   while(i >= 0) {
      double ma = iMA(NULL,0,KRIPeriod,0,MODE_SMA,PRICE_CLOSE,i);
      KRIBuffer[i] = ((Close[i]-ma)/ma)*100;
      i--;
   }
   return(0);
}
//+------------------------------------------------------------------+